{"version":3,"sources":["jquery.scrollmenu.js"],"names":["$","fn","scrollmenu","data","menu","elem","this","opts","deepIndex","uniqueId","isJumpingTo","init","settings","extend","defaults","items","find","start","not","disableHeaderSelector","build","addClass","menuClass","window","scroll","onScroll","click","e","preventDefault","jumpTo","hash","substr","options","each","i","item","buildAnchor","li","append","buildReference","depth","deepSelector","replace","str","parseInt","deepItems","nextUntil","tagName","length","a","text","attr","id","p1","p2","toLowerCase","generatedId","console","log","oldId","generateUniqueId","prefix","suffix","document","getElementById","getCurrent","current","filter","offset","top","scrollTop","nextAll","toggleWhileJumping","setClasses","activeLi","parent","activeClass","parents","parentClass","add","siblings","removeClass","speed","jumpSpeed","offsetTop","animate","location","methods","refresh","destroy","removeAttr","remove","get","apply","arguments","Array","prototype","slice","call","jQuery"],"mappings":"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","file":"jquery.scrollmenu.js","sourcesContent":["\r\n/* global\r\n  $: false,\r\n  jQuery: false,\r\n  window: false,\r\n  document: false\r\n*/\r\n\r\n(function($) {\r\n\r\n  $.fn.scrollmenu = function() {\r\n\r\n    /**\r\n     * @type {jQuery Object}\r\n     */\r\n    var elem = $(this);\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    var data;\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    var opts = {};\r\n\r\n    /**\r\n     * Current deep index.\r\n     * @type {Integer}\r\n     */\r\n    var deepIndex = 0;\r\n\r\n    /**\r\n     * Counter for generating unique IDs - increased by one if ID exists.\r\n     * @type {Integer}\r\n     */\r\n    var uniqueId = 0;\r\n\r\n    /**\r\n     * Whole menu.\r\n     * @type {jQuery Object}\r\n     */\r\n    var menu;\r\n\r\n\r\n    /**\r\n     * Set to 'true' while jumping to a header.\r\n     * @type {boolean}\r\n     */\r\n    var isJumpingTo = false;\r\n\r\n    ////////////////////////\r\n    // Private functions  //\r\n    ////////////////////////\r\n\r\n    /**\r\n     * Initialization\r\n     * @param {object} settings - Options that should overwrite the defaults.\r\n     */\r\n    var init = function(settings) {\r\n      opts = $.extend(true, {}, $.fn.scrollmenu.defaults, settings);\r\n      elem.data('scrollmenu', opts);\r\n\r\n      // Find all first level items\r\n      var items = $(elem.find(opts.start).not(opts.disableHeaderSelector));\r\n      menu = build(items).addClass(opts.menuClass);\r\n\r\n      // Bind onScroll event\r\n      $(window).scroll(function() {\r\n        onScroll();\r\n      });\r\n\r\n      // Bind jumpTo event to menu anchors\r\n      menu.find('a').click(function(e) {\r\n        e.preventDefault();\r\n        jumpTo(this.hash.substr(1));\r\n      });\r\n\r\n      // Bind options to container element\r\n      elem.data('scrollmenu', {\r\n        options: opts,\r\n        menu: menu,\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Build list recursively\r\n     * @param {jQuery object} items - All headers in this level.\r\n     * @return {jQuery object} Unordered list\r\n     */\r\n    var build = function(items) {\r\n      var menu = $('<ul />');\r\n\r\n      // Current items\r\n      items.each(function(i, item) {\r\n        item = buildAnchor($(item));\r\n        var li = $('<li />');\r\n        li.append(buildReference($(item)));\r\n\r\n        if (deepIndex < opts.depth) {\r\n          // Deep selector\r\n          var deepSelector = opts.start.replace(/\\d+/, function(str) {\r\n            return parseInt(str) + deepIndex + 1;\r\n          });\r\n\r\n          // Deep items\r\n          var deepItems = item.nextUntil(item[0].tagName, deepSelector).not(opts.disableHeaderSelector);\r\n          if (deepItems.length > 0) {\r\n            deepIndex++;\r\n            li.append(build(deepItems));\r\n            deepIndex--;\r\n          }\r\n        }\r\n\r\n        menu.append(li);\r\n      });\r\n\r\n      return menu;\r\n    };\r\n\r\n    /**\r\n     * Build an `<a>` element from an item.\r\n     * @param {jQuery object} item\r\n     * @return {jQuery object}\r\n     */\r\n    var buildReference = function(item) {\r\n      var a = $('<a />');\r\n      uniqueId = 0;\r\n\r\n      a.text(item.text());\r\n      a.attr('href', '#' + item.attr('id'));\r\n\r\n      return a;\r\n    };\r\n\r\n    /**\r\n     * Build an anchor (ID) for the current item.\r\n     * @param {jQuery object} item\r\n     * @return {jQuery object}\r\n     */\r\n    var buildAnchor = function(item) {\r\n      var id = item.attr('id');\r\n\r\n      // Generate a new ID, if not exists\r\n      if (typeof id === 'undefined') {\r\n        id = item.text().replace(/(\\s+)|(#+)/g, function(str, p1, p2) {\r\n          if (p1) return '-'; // Replace spaces\r\n          if (p2) return ''; // Replace '#'\r\n        }).toLowerCase();\r\n        item.data('scrollmenu', { generatedId: id });\r\n      }\r\n\r\n      console.log($('[id=\"' + id + '\"]').length);\r\n\r\n      // Make it unique, if necessary\r\n      // The `[id=\"' + id + '\"]` selector is the only way to check for\r\n      // duplicated IDs\r\n      if (!id || $('[id=\"' + id + '\"]').length > 1) {\r\n        var data = { oldId: id };\r\n\r\n        id = generateUniqueId(id + '-');\r\n\r\n        data.generatedId = id;\r\n        item.data('scrollmenu', data);\r\n      }\r\n\r\n      item.attr('id', id);\r\n      return item;\r\n    };\r\n\r\n    /**\r\n     * Generate a new unique id\r\n     * @param {String} prefix\r\n     * @param {String} suffix\r\n     * @return {String}\r\n     */\r\n    var generateUniqueId = function(prefix, suffix) {\r\n      prefix = (typeof prefix !== 'undefined') ? prefix : '';\r\n      suffix = (typeof suffix !== 'undefined') ? suffix : '';\r\n      uniqueId++;\r\n\r\n      var id = prefix + uniqueId + suffix;\r\n      if ($(document.getElementById(id)).length) {\r\n        return generateUniqueId(prefix, suffix);\r\n      }\r\n      return id;\r\n    };\r\n\r\n    /**\r\n     * Get current ID\r\n     * @param {jQuery object}\r\n     */\r\n    var getCurrent = function() {\r\n      var current = false;\r\n\r\n      // Loop through all IDs, filtered by headers\r\n      $('[id]').filter(':header').each(function() {\r\n        if ($(this).offset().top <= $(window).scrollTop() + opts.offset) {\r\n          if ($(this).nextAll('[id]').length === 0 || $(this).nextAll('[id]').offset().top > $(window).scrollTop() + opts.offset) {\r\n            current = $(this).attr('id');\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n\r\n      return current;\r\n    };\r\n\r\n    /**\r\n     * Bind scroll event\r\n     */\r\n    var onScroll = function() {\r\n      // Toggle classes while scrolling (special on jumping)\r\n      if (!(!opts.toggleWhileJumping && isJumpingTo)) {\r\n        setClasses();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Set and reset all classes as required\r\n     */\r\n    var setClasses = function() {\r\n      var current = getCurrent();\r\n\r\n      // Find active `<li>`.\r\n      var activeLi = menu.find('li a').filter(function() {\r\n        return $(this).attr('href') == '#' + current;\r\n      }).parent();\r\n\r\n      // Add `.active` class to current.\r\n      activeLi.addClass(opts.activeClass);\r\n\r\n      // Add `.active` class to parent.\r\n      var parent = activeLi.parents('li').addClass(opts.parentClass);\r\n\r\n      // First, remove all `.active` classes.\r\n      activeLi.add(parent).siblings().removeClass(opts.activeClass);\r\n    };\r\n\r\n    /**\r\n     * Jump to a heading\r\n     * @param {string} id - The ID to jump to\r\n     * @param {integer} Scroll speed\r\n     */\r\n    var jumpTo = function(id, speed) {\r\n      speed = typeof speed !== 'undefined' ? speed : opts.jumpSpeed;\r\n\r\n      isJumpingTo = true;\r\n      var offsetTop = $(document.getElementById(id)).offset().top;\r\n\r\n      $('html, body').animate({\r\n        scrollTop: offsetTop,\r\n      }, speed, function() {\r\n        // Set location.hash value after animations\r\n        window.location.hash = id;\r\n\r\n        if (!opts.toggleWhileJumping) {\r\n          setClasses();\r\n        }\r\n\r\n        isJumpingTo = false;\r\n      });\r\n    };\r\n\r\n    ////////////////////\r\n    // Public Methods //\r\n    ////////////////////\r\n\r\n    var methods = {\r\n\r\n      /**\r\n       * Refresh\r\n       * @param {object} settings - New settings\r\n       */\r\n      refresh: function(settings) {\r\n        // Reset all\r\n        methods.destroy();\r\n\r\n        // Start new\r\n        if (typeof settings === 'undefined') {\r\n          settings = opts;\r\n        }\r\n        init(settings);\r\n      },\r\n\r\n      /**\r\n       * Destroyer\r\n       * Remove all data, classes and inserted elements.\r\n       */\r\n      destroy: function() {\r\n        // Get all headers, filter by data.scrollmenu\r\n        $(':header').filter(function() {\r\n          return !!$(this).data('scrollmenu');\r\n        }).each(function() {\r\n          var data = $(this).data('scrollmenu');\r\n\r\n          // Reset old ID, if set (and no new one is set)\r\n          if (('generatedId' in data) && data.generatedId == $(this).attr('id')) {\r\n            if ('oldId' in data) {\r\n              $(this).attr('id', data.oldId);\r\n            }else{\r\n              $(this).removeAttr('id');\r\n            }\r\n          }\r\n        });\r\n\r\n        // Remove inserted menu\r\n        menu.remove();\r\n      },\r\n\r\n      /**\r\n       * Get the built menu\r\n       * @return {jQuery Object} Unordered list\r\n       */\r\n      get: function() {\r\n        return menu;\r\n      }\r\n    };\r\n\r\n    /////////////\r\n    // Plugin  //\r\n    /////////////\r\n\r\n    if (typeof elem.data('scrollmenu') === 'undefined') {\r\n      // Init\r\n      init.apply(this, arguments);\r\n    }else{\r\n      // Retrieve data\r\n      data = elem.data('scrollmenu');\r\n      opts = data.options;\r\n      menu = data.menu;\r\n\r\n      // Find methods\r\n      if (arguments[0] in methods) {\r\n        return methods[arguments[0]].apply(this, Array.prototype.slice.call(arguments, 1));\r\n      }\r\n    }\r\n\r\n    return elem;\r\n  };\r\n\r\n  /////////////////////\r\n  // Default Options //\r\n  /////////////////////\r\n\r\n  $.fn.scrollmenu.defaults = {\r\n    start:                  'h2',                       // Start at this header.\r\n    depth:                  2,                          // Depth from `start` point; 0 for disabling depth selectors.\r\n    jumpSpeed:              400,                        // Scroll speed when click on a menu item; 0 for disabling.\r\n    offset:                 0,                          // Scroll position offset; the higher the earlier is the header selected.\r\n    toggleWhileJumping:     false,                      // Toggle classes while jumping (scrolling) to a header.\r\n    disableHeaderSelector:  '[data-disable=\"true\"]',    // Selector to disable a header. Will be used within the `:not()` function.\r\n    activeClass:            'active',                   // Class name for current list item.\r\n    parentClass:            'active',                   // Class name for parent list item of the current item.\r\n    menuClass:              'menu',                     // Class name for the root list.\r\n  };\r\n}(jQuery));\r\n"],"sourceRoot":"/source/"}